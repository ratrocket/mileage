== Track mileage simply.

DONE:
* convert to postgres (done?)
* authentication (means users too...) (using nifty stuff)
* ssl required on everything -- use Rack middleware:
  http://goo.gl/0U5mz (stackoverflow; not quite rails 3 I don't think...)
  http://goo.gl/C4YjM (rails guide to Rack)
  (using Rack::SSL)
* turn off signup before it goes to heroku (login_required for ALL
  actions in all controllers, including  users#new!)
* get it going on heroku:
* use thin (working locally, need Procfile for heroku?)
* get laptop setup to deploy to heroku:
  http://iamneato.com/2009/07/18/one-heroku-app-from-two-computers
  http://www.simb.net/2010/06/22/heroku-one-application-two-computers/

TODO:

* TESTS
* look at taps to do db backups
  http://devcenter.heroku.com/articles/taps
* get timezone correct in the heroku database (for timestamps)

FEATURE TODO:

* saved ride profiles/templates (for common rides: commutes, etc.)
* better date picker (_any_ date picker!)
* "waypoints" or something -- build up a ride from smaller segments
  (maybe, maybe not...)
* create a Service class so I can record when the bike was serviced.
  To do it I could introduce an Activity class and make Ride and Service
  both subclasses of that (& use STI for the DB)
