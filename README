== Track mileage simply.

REMINDERS:

deploy:
git push heroku master

migrate:
heroku run rake db:migrate (for cedar apps)

get db:
heroku db:pull
(can back up local db prior to that with './bin/backup_db')

console on production:
heroku run console

start server:
rails s thin -p4000

postgres console:
psql -U mileage mileage_development

for rake:
REMEMBER to use 'bundle exec' (eg, bundle exec rake db:migrate)

DONE:

* convert to postgres (done?)
* authentication (means users too...) (using nifty stuff)
* ssl required on everything -- use Rack middleware:
  http://goo.gl/0U5mz (stackoverflow; not quite rails 3 I don't think...)
  http://goo.gl/C4YjM (rails guide to Rack)
  (using Rack::SSL)
* turn off signup before it goes to heroku (login_required for ALL
  actions in all controllers, including  users#new!)
* get it going on heroku:
* use thin (working locally, need Procfile for heroku?)
* get laptop setup to deploy to heroku:
  http://iamneato.com/2009/07/18/one-heroku-app-from-two-computers
  http://www.simb.net/2010/06/22/heroku-one-application-two-computers/
* Have short & long descriptions in Ride (or in Activity). Short can be
  displayed when listing, long when viewing details.
* Make it so Users own Rides and Bikes
* look at taps to do db backups
  http://devcenter.heroku.com/articles/taps
* saved ride profiles/templates (for common rides: commutes, etc.)
* ideas for filtering what rides are shown by URL.
  E.g., site.com/rides/2011        => all 2011 rides
        site.com/rides/2011/10     => Oct 2011 rides
        site.com/rides/kogswell_pr => all P/R rides ever
        site.com/rides/all         => everything (current default)
        site.com/rides             => default to? (cur. yr/month?)
        site.com/rides/2011/kogswell_pr    => combine???
        site.com/rides/2011/09/kogswell_pr => ditto
  The combining bikes with dates seems like it will be messy... Would
  have to use a splat I'm guessing, then parse it in the controller.
  Yuck.
  OR, could do a query string. Easy, dirty, quick, would work.
  So: hollow-river.com/rides?y=2011&m=09&b=kogswell_pr+bridgestone_mb_1
  params are y, m, b for year, month, bike
  Mega ugly.
  (I went with the GET query string)
* instead of just total mileage on rides page, now that multiple bikes
  are really in the mix (as of October 2011) I should break down mileage
  by bicycle and give a total.
* Having ALL rides on one page is getting unwieldy too. Should organize
  by month or by month&bike or...

TODO:

* TESTS
* get timezone correct in the heroku database (for timestamps)
* rvm/readline on my laptop?
  (https://rvm.beginrescueend.com/packages/readline/)

FEATURE TODO:

* better date picker (_any_ date picker!)
* "waypoints" or something -- build up a ride from smaller segments
  (maybe, maybe not...) (this could just be "draft" vs. "live" Rides;
  build up the draft then make it live once complete)
* create a Service class so I can record when the bike was serviced.
  To do it I could introduce an Activity class and make Ride and Service
  both subclasses of that (& use STI for the DB)
  (Right now I'm going to enter Service as 0mi/km Rides and put
  "SERVICE: ..." in the short description.)
* don't have fields for BOTH miles and km in new ride form (js switch)
* upgrade to Rails 3.1
  (http://guides.rubyonrails.org/3_1_release_notes.html)
* when using a template, I could set the bike to be the most recently
  used bike
* editing templates is currenly impossible from the web side
* something like templates for bikes to use the version numbers.  I want
  to be able to base a "new" bike on an existing bike, changing just
  what's changed.  For when major changes are made to a bike but it's
  still the same bike... Or is it?
* maybe a Reminder (or ?) class would be good (or is it just a Note?
  Already have Notes) so I can enter reminders to book rides without
  actually figuring out the distance.  This would be helpful.
* So... after looking at the Note feature, I'm not sure it's a great
  idea.  Am I using it?  A Reminder certainly could be a Note, but is
  Note then just a waste basket?  Big questions.
* Be able to collect all SERVICE entries for each bike
* TODOs for each bike: what needs to be fixed, projects I want to do,
  etc.
* Markdown (or something) for ride descriptions (& probably other more)
  (maybe rdiscount: https://github.com/rtomayko/rdiscount)
* When filtering rides for a certain month, list # of days in month with
  riding vs. number of days w/o riding.  To get # of days in a month:
  Date.civil(2012, 2, -1).day, or Date.civil(year_num, month_num, -1).day
